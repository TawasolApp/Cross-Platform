// Mocks generated by Mockito 5.4.5 from annotations
// in linkedin_clone/test/unit/providers/connections_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:linkedin_clone/features/connections/domain/entities/connections_user_entity.dart'
    as _i5;
import 'package:linkedin_clone/features/connections/domain/repository/connections_repository.dart'
    as _i2;
import 'package:linkedin_clone/features/connections/domain/usecases/get_connections_usecase.dart'
    as _i3;
import 'package:linkedin_clone/features/connections/domain/usecases/remove_connection_usecase.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConnectionsListRepository_0 extends _i1.SmartFake
    implements _i2.ConnectionsListRepository {
  _FakeConnectionsListRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetConnectionsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetConnectionsUseCase extends _i1.Mock
    implements _i3.GetConnectionsUseCase {
  MockGetConnectionsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ConnectionsListRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeConnectionsListRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.ConnectionsListRepository);

  @override
  _i4.Future<List<_i5.ConnectionsListUserEntity>> call(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#call, [token]),
            returnValue: _i4.Future<List<_i5.ConnectionsListUserEntity>>.value(
              <_i5.ConnectionsListUserEntity>[],
            ),
          )
          as _i4.Future<List<_i5.ConnectionsListUserEntity>>);
}

/// A class which mocks [RemoveConnectionUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveConnectionUseCase extends _i1.Mock
    implements _i6.RemoveConnectionUseCase {
  MockRemoveConnectionUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ConnectionsListRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeConnectionsListRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.ConnectionsListRepository);

  @override
  _i4.Future<bool> call(String? userId, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#call, [userId, token]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

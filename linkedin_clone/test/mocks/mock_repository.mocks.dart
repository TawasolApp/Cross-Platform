// Mocks generated by Mockito 5.4.5 from annotations
// in linkedin_clone/test/mocks/mock_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i4;
import 'package:linkedin_clone/core/errors/failures.dart' as _i5;
import 'package:linkedin_clone/features/feed/data/models/comment_model.dart'
    as _i9;
import 'package:linkedin_clone/features/feed/data/models/reaction_model.dart'
    as _i8;
import 'package:linkedin_clone/features/feed/domain/entities/post_entity.dart'
    as _i6;
import 'package:linkedin_clone/features/feed/domain/repositories/feed_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FeedRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeedRepository extends _i1.Mock implements _i2.FeedRepository {
  MockFeedRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>> getPosts(
    String? userId, {
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getPosts,
              [userId],
              {#page: page, #limit: limit},
            ),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>(
                    this,
                    Invocation.method(
                      #getPosts,
                      [userId],
                      {#page: page, #limit: limit},
                    ),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>> getUserPosts(
    String? companyId,
    String? userId, {
    int? page = 1,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUserPosts,
              [companyId, userId],
              {#page: page, #limit: limit},
            ),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>(
                    this,
                    Invocation.method(
                      #getUserPosts,
                      [companyId, userId],
                      {#page: page, #limit: limit},
                    ),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.PostEntity>> createPost(
    String? userId, {
    required String? content,
    List<String>? media,
    List<String>? taggedUsers,
    required String? visibility,
    String? parentPostId,
    bool? isSilentRepost = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #createPost,
              [userId],
              {
                #content: content,
                #media: media,
                #taggedUsers: taggedUsers,
                #visibility: visibility,
                #parentPostId: parentPostId,
                #isSilentRepost: isSilentRepost,
              },
            ),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, _i6.PostEntity>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, _i6.PostEntity>>(
                    this,
                    Invocation.method(
                      #createPost,
                      [userId],
                      {
                        #content: content,
                        #media: media,
                        #taggedUsers: taggedUsers,
                        #visibility: visibility,
                        #parentPostId: parentPostId,
                        #isSilentRepost: isSilentRepost,
                      },
                    ),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i6.PostEntity>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> deletePost(
    String? userId,
    String? postId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deletePost, [userId, postId]),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(#deletePost, [userId, postId]),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> savePost(
    String? userId,
    String? postId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#savePost, [userId, postId]),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(#savePost, [userId, postId]),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> unsavePost(
    String? userId,
    String? postId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#unsavePost, [userId, postId]),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(#unsavePost, [userId, postId]),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> reactToPost(
    String? userId, {
    required String? postId,
    required Map<String, bool>? reactions,
    required String? postType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #reactToPost,
              [userId],
              {#postId: postId, #reactions: reactions, #postType: postType},
            ),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(
                  #reactToPost,
                  [userId],
                  {#postId: postId, #reactions: reactions, #postType: postType},
                ),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i8.ReactionModel>>> getPostReactions(
    String? userId,
    String? postId, {
    String? type = 'All',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getPostReactions,
              [userId, postId],
              {#type: type},
            ),
            returnValue: _i3.Future<
              _i4.Either<_i5.Failure, List<_i8.ReactionModel>>
            >.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, List<_i8.ReactionModel>>>(
                this,
                Invocation.method(
                  #getPostReactions,
                  [userId, postId],
                  {#type: type},
                ),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i8.ReactionModel>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> editPost(
    String? userId, {
    required String? postId,
    required String? content,
    required List<String>? media,
    required List<String>? taggedUsers,
    required String? visibility,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #editPost,
              [userId],
              {
                #postId: postId,
                #content: content,
                #media: media,
                #taggedUsers: taggedUsers,
                #visibility: visibility,
              },
            ),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(
                  #editPost,
                  [userId],
                  {
                    #postId: postId,
                    #content: content,
                    #media: media,
                    #taggedUsers: taggedUsers,
                    #visibility: visibility,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i9.CommentModel>> addComment(
    String? userId, {
    required String? postId,
    required String? content,
    List<String>? taggedUsers,
    bool? isReply = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addComment,
              [userId],
              {
                #postId: postId,
                #content: content,
                #taggedUsers: taggedUsers,
                #isReply: isReply,
              },
            ),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, _i9.CommentModel>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, _i9.CommentModel>>(
                    this,
                    Invocation.method(
                      #addComment,
                      [userId],
                      {
                        #postId: postId,
                        #content: content,
                        #taggedUsers: taggedUsers,
                        #isReply: isReply,
                      },
                    ),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i9.CommentModel>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i9.CommentModel>>> fetchComments(
    String? userId,
    String? postId, {
    int? page = 1,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #fetchComments,
              [userId, postId],
              {#page: page, #limit: limit},
            ),
            returnValue: _i3.Future<
              _i4.Either<_i5.Failure, List<_i9.CommentModel>>
            >.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, List<_i9.CommentModel>>>(
                this,
                Invocation.method(
                  #fetchComments,
                  [userId, postId],
                  {#page: page, #limit: limit},
                ),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i9.CommentModel>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> editComment(
    String? userId, {
    required String? commentId,
    required String? content,
    List<String>? tagged,
    bool? isReply,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #editComment,
              [userId],
              {
                #commentId: commentId,
                #content: content,
                #tagged: tagged,
                #isReply: isReply,
              },
            ),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(
                  #editComment,
                  [userId],
                  {
                    #commentId: commentId,
                    #content: content,
                    #tagged: tagged,
                    #isReply: isReply,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> deleteComment(
    String? userId,
    String? commentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteComment, [userId, commentId]),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(#deleteComment, [userId, commentId]),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>> getSavedPosts(
    String? companyId, {
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSavedPosts,
              [companyId],
              {#page: page, #limit: limit},
            ),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>(
                    this,
                    Invocation.method(
                      #getSavedPosts,
                      [companyId],
                      {#page: page, #limit: limit},
                    ),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.PostEntity>> fetchPostById({
    required String? userId,
    required String? postId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPostById, [], {
              #userId: userId,
              #postId: postId,
            }),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, _i6.PostEntity>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, _i6.PostEntity>>(
                    this,
                    Invocation.method(#fetchPostById, [], {
                      #userId: userId,
                      #postId: postId,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i6.PostEntity>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>> getReposts({
    required String? userId,
    required String? postId,
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getReposts, [], {
              #userId: userId,
              #postId: postId,
              #page: page,
              #limit: limit,
            }),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>(
                    this,
                    Invocation.method(#getReposts, [], {
                      #userId: userId,
                      #postId: postId,
                      #page: page,
                      #limit: limit,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>> searchPosts({
    required String? companyId,
    required String? query,
    bool? network,
    String? timeframe,
    int? page,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchPosts, [], {
              #companyId: companyId,
              #query: query,
              #network: network,
              #timeframe: timeframe,
              #page: page,
              #limit: limit,
            }),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>(
                    this,
                    Invocation.method(#searchPosts, [], {
                      #companyId: companyId,
                      #query: query,
                      #network: network,
                      #timeframe: timeframe,
                      #page: page,
                      #limit: limit,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i6.PostEntity>>>);
}
